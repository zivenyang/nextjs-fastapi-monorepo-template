// This file is auto-generated by @hey-api/openapi-ts

export type BodyLoginAccessToken = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

/**
 * API认证令牌模型
 */
export type Token = {
  /**
   * JWT访问令牌
   */
  access_token: string;
  /**
   * 令牌类型
   */
  token_type?: string;
};

/**
 * 用户创建数据模型
 */
export type UserCreate = {
  /**
   * 用户邮箱（必填）
   */
  email: string;
  /**
   * 用户名
   */
  username?: string | null;
  /**
   * 用户全名
   */
  full_name?: string | null;
  /**
   * 用户是否激活
   */
  is_active?: boolean | null;
  /**
   * 用户角色
   */
  role?: UserRole | null;
  /**
   * 是否为超级用户
   */
  is_superuser?: boolean | null;
  /**
   * 邮箱是否已验证
   */
  is_verified?: boolean | null;
  /**
   * 用户密码（至少8位）
   */
  password: string;
};

/**
 * 用户资料响应模式
 */
export type UserProfileResponse = {
  avatar_url?: string | null;
  bio?: string | null;
  phone_number?: string | null;
  address?: string | null;
  id: string;
  user_id: string;
  created_at: string;
  updated_at?: string | null;
};

/**
 * 用户资料更新模式
 */
export type UserProfileUpdate = {
  avatar_url?: string | null;
  bio?: string | null;
  phone_number?: string | null;
  address?: string | null;
};

/**
 * API响应中的用户数据模型
 */
export type UserResponse = {
  /**
   * 用户邮箱
   */
  email?: string | null;
  /**
   * 用户名
   */
  username?: string | null;
  /**
   * 用户全名
   */
  full_name?: string | null;
  /**
   * 用户是否激活
   */
  is_active?: boolean | null;
  /**
   * 用户角色
   */
  role?: UserRole | null;
  /**
   * 是否为超级用户
   */
  is_superuser?: boolean | null;
  /**
   * 邮箱是否已验证
   */
  is_verified?: boolean | null;
  /**
   * 用户ID
   */
  id: string;
  created_at: string;
  updated_at?: string | null;
  last_login?: string | null;
  profile?: UserProfileResponse | null;
};

export type UserRole = "admin" | "user" | "guest";

/**
 * 用户更新数据模型
 */
export type UserUpdate = {
  /**
   * 用户邮箱
   */
  email?: string | null;
  /**
   * 用户名
   */
  username?: string | null;
  /**
   * 用户全名
   */
  full_name?: string | null;
  /**
   * 用户是否激活
   */
  is_active?: boolean | null;
  /**
   * 用户角色
   */
  role?: UserRole | null;
  /**
   * 是否为超级用户
   */
  is_superuser?: boolean | null;
  /**
   * 邮箱是否已验证
   */
  is_verified?: boolean | null;
  /**
   * 用户密码（如需更新）
   */
  password?: string | null;
  profile?: UserProfileUpdate | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type LoginAccessTokenData = {
  body: BodyLoginAccessToken;
  path?: never;
  query?: never;
  url: "/api/v1/auth/login";
};

export type LoginAccessTokenErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type LoginAccessTokenError =
  LoginAccessTokenErrors[keyof LoginAccessTokenErrors];

export type LoginAccessTokenResponses = {
  /**
   * Successful Response
   */
  200: Token;
};

export type LoginAccessTokenResponse =
  LoginAccessTokenResponses[keyof LoginAccessTokenResponses];

export type LogoutData = {
  body?: never;
  headers: {
    authorization: string;
  };
  path?: never;
  query?: never;
  url: "/api/v1/auth/logout";
};

export type LogoutErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type LogoutError = LogoutErrors[keyof LogoutErrors];

export type LogoutResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type RegisterUserData = {
  body: UserCreate;
  path?: never;
  query?: never;
  url: "/api/v1/auth/register";
};

export type RegisterUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type RegisterUserError = RegisterUserErrors[keyof RegisterUserErrors];

export type RegisterUserResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type RegisterUserResponse =
  RegisterUserResponses[keyof RegisterUserResponses];

export type ReadUsersData = {
  body?: never;
  path?: never;
  query?: {
    skip?: number;
    limit?: number;
  };
  url: "/api/v1/users/";
};

export type ReadUsersErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadUsersError = ReadUsersErrors[keyof ReadUsersErrors];

export type ReadUsersResponses = {
  /**
   * Successful Response
   */
  200: Array<UserResponse>;
};

export type ReadUsersResponse = ReadUsersResponses[keyof ReadUsersResponses];

export type ReadUserMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/users/me";
};

export type ReadUserMeResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type ReadUserMeResponse = ReadUserMeResponses[keyof ReadUserMeResponses];

export type UpdateUserMeData = {
  body: UserUpdate;
  path?: never;
  query?: never;
  url: "/api/v1/users/me";
};

export type UpdateUserMeErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateUserMeError = UpdateUserMeErrors[keyof UpdateUserMeErrors];

export type UpdateUserMeResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type UpdateUserMeResponse =
  UpdateUserMeResponses[keyof UpdateUserMeResponses];

export type ReadUserData = {
  body?: never;
  path: {
    user_id: string;
  };
  query?: never;
  url: "/api/v1/users/{user_id}";
};

export type ReadUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ReadUserError = ReadUserErrors[keyof ReadUserErrors];

export type ReadUserResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type ReadUserResponse = ReadUserResponses[keyof ReadUserResponses];

export type ClientOptions = {
  baseUrl: `${string}://openapi.json` | (string & {});
};
